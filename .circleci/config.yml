version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.1
  slack: circleci/slack@3.4.2
commands:
  install-dependencies:
    steps:
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: install dependencies
          command: |
            sudo npm install -g n && sudo n 12
            npm ci
            gem install bundler:1.17.3
            bundle check || bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
      - save_cache:
          paths:
            - ./node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - browser-tools/install-browser-tools
  build-site:
    steps:
      - run:
          name: build the site
          command: |
            npm run build-js
            bundle exec jekyll build

jobs:
  build:
    docker:
      - image: cimg/ruby:2.6-browsers
    steps:
      - checkout
      - install-dependencies
      - build-site
      - persist_to_workspace:
          root: "."
          paths:
            - "_site"

  test:
    docker:
      - image: cimg/ruby:2.6-browsers
    steps:
      - checkout
      - install-dependencies
      - attach_workspace:
          at: "."
      - run:
          name: run tests
          command: bundle exec rspec spec
      - run:
          name: check old URLs
          command: bundle exec ./scripts/sitemap-check --directory _site --old-urls-file OLD_URLS.yml
      - run:
          name: Run htmlproofer (no external links)
          command: bundle exec scripts/htmlproofer --internal

  accessibility:
    docker:
      - image: cimg/ruby:2.6-browsers
    environment:
      SKIP_BUILD: true
    steps:
      - checkout
      - install-dependencies
      - attach_workspace:
          at: "."
      - run:
          name: run end-to-end tests
          command: npm test

  eslint:
    docker:
      - image: cimg/ruby:2.6-browsers
    steps:
      - checkout
      - install-dependencies
      - run:
          name: run ESLint
          command: make lint-js

  check-optimized-assets:
    docker:
      - image: cimg/ruby:2.6-browsers
    steps:
      - checkout
      - install-dependencies
      - run:
          name: check optimized images
          command: make lint-assets

  check-javascript-syntax:
    docker:
      - image: cimg/ruby:2.6-browsers
    steps:
      - checkout
      - install-dependencies
      - attach_workspace:
          at: "."
      - run:
          name: check es5 syntax
          command: npm run es5-safe

  # Running external links as a separate job so we don't fail the build directly
  # but do get the feedback/info
  test-external-links:
    docker:
      - image: cimg/ruby:2.6-browsers
    steps:
      - checkout
      - install-dependencies
      - attach_workspace:
          at: "."
      - run:
          name: Run htmlproofer (external links only)
          command: bundle exec scripts/htmlproofer --external --retry-external 3 --retry-external-delay 8 --url-ignore congress.gov
      - slack/status:
          fail_only: true
          failure_message: ":login-gov::red_circle: external link check failed"
          only_for_branches: 'main' # don't notify Slack on a branch build

workflows:
  version: 2
  release:
    jobs:
      - build
      - eslint
      - check-optimized-assets
      - test:
          requires:
            - build
      - check-javascript-syntax:
          requires:
            - build
      - test-external-links:
          requires:
            - build
      - accessibility:
          requires:
            - build
  daily-external-link-checker:
    jobs:
      - build
      - test-external-links:
          requires:
            - build
    triggers:
      - schedule:
          # Once a day at 12pm
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - main
